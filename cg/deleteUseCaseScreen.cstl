usecaseDefinition::
usecase _1 ( _2 ) { _3 } |-->import SwiftUI\n\nstruct _1Screen: View\n{ @State var objectId: String = ""\n  @ObservedObject var model : ModelFacade\n\n  var body: some View\n  {\n    _3\n  }\n}\n\n
usecase _* |-->



parameterDeclarations::
_* |-->


parameterDeclaration::
_* |-->


usecaseBody::
_* |-->_*


usecaseBodyElement::
parameter _1 : _2 ; |--> 
precondition _1 ; |--> 
extends _1 ; |--> 
extendedBy _1 ; |--> 
activity: _1 ; |--> 
:: _1 |-->
_1 |-->_1
   

stereotype::

stereotype _1 ; |-->

stereotype entity = _1 ; |-->VStack(alignment: HorizontalAlignment.leading, spacing: 20) {\n      Picker("_1", selection: $objectId)\n      { ForEach(model.current_1s) { Text($0.id).tag($0.id) } }\n\n      HStack(spacing: 20) {\n        Button(action: { } ) { Text("Cancel") }\n        Button(action: { self.model.delete_1(_id: objectId) } ) { Text("Delete_1") }\n      }.buttonStyle(DefaultButtonStyle())\n    }.padding(.top).onAppear(perform:\n          { objectId = model.current_1.id })

stereotype _1 = _2 ; |-->






