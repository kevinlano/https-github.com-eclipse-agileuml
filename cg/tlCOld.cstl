
















seq3ruleset154::
; |--> 
attribute _2 : _4  |-->_4 _2 ; 
_0 |-->_0

subruleset155::
_* |-->_*`seq3ruleset154

seq2ruleset193::
; |-->,
literal _2  |-->_2 
_0 |-->_0
_* |-->_*`seq2ruleset193

seq3ruleset91::
; |--> 
_1 |-->_1 
_0 |-->_0

OclUnaryExpression::
_1 _2 ( )  |-->_2`nestedTfunc83 ( _1 ) 
_1 _2  |-->_1`nestedTfunc81 _2 

nestedTfunc81::
not |-->!
_1 |-->_1
_* |-->-

OclOperation::
query _2 ( ) : _6 pre: true  post: true  activity: _12  |-->_6 _2 ( void ) { _12 } 
query _2 ( _* ) : _7 pre: true  post: true  activity: _13  |-->_7 _2 ( _*`seq2ruleset113 ) { _13 } 
operation _2 ( ) : _6 pre: true  post: true  activity: _12  |-->_6 _2 ( void ) { _12 } 
operation _2 ( _* ) : _7 pre: true  post: true  activity: _13  |-->_7 _2 ( _*`seq2ruleset125 ) { _13 } 

OclBinaryExpression::
_1 ->lastIndexOf ( _4 )  |-->lastIndexOf ( _1 , _4 ) 
_1 ->including ( _4 )  |-->including ( _1 , _4 ) 
_1 ->union ( _4 )  |-->union ( _1 , _4 ) 
_1 ->includesAll ( _4 )  |-->includesAll ( _1 , _4 ) 
_1 ->append ( _4 )  |-->append ( _1 , _4 ) 
_1 ->excludesAll ( _4 )  |-->excludesAll ( _1 , _4 ) 
_1 ->prepend ( _4 )  |-->prepend ( _1 , _4 ) 
_1 ->intersection ( _4 )  |-->intersection ( _1 , _4 ) 
_1 ->excludes ( _4 )  |-->excludes ( _1 , _4 ) 
_1 ->indexOf ( _4 )  |-->indexOf ( _1 , _4 ) 
_1 ->pow ( _4 )  |-->pow ( _1 , _4 ) 
_1 <= _3  |-->_1 <= _3 
_1 mod _3  |-->_1 % _3 
_1 * _3  |-->_1 * _3 
_1 + _3  |-->_1 + _3 
_1 < _3  |-->_1 < _3 
_1 - _3  |-->_1 - _3 
_1 = _3  |-->_1 == _3 
_1 > _3  |-->_1 > _3 
_1 /= _3  |-->_1 != _3 
_1 / _3  |-->_1 / _3 
_1 >= _3  |-->_1 >= _3 

nestedTfunc83::
->toLowerCase |-->toLowerCase
->toUpperCase |-->toUpperCase
->front |-->front
->tail |-->tail
->first |-->first
->last |-->last
_* |-->toLowerCase

OclType::
void  |-->void 
OclAny  |-->void * 
boolean |-->_Bool
String  |-->char * 
Set ( _3 )  |-->_3 * * 
Sequence ( _3 )  |-->_3 * * 
_1  |-->struct _1 <when> _1 Class
_1 |-->_1
_* |-->int

OclConditionalExpression::
if _2 then _4 else _6 endif  |-->( _2 ) ? _4 : _6 

nestedSfunc85::
boolean |-->_Bool
_1 |-->_1
_* |-->int

subruleset92::
_* |-->_*`seq3ruleset91

nestedSfunc73::
this |-->self
_1 |-->_1
_* |-->self

OclClass::
class _2 { _4 }  |-->struct _2 { _4`subruleset155 } ; 

OclCollectionExpression::
Set { _* }  |-->newList ( _* ) 
Sequence { _* }  |-->newList ( _* ) 
_1 { }  |-->newList ( ) 

seq2ruleset125::
_1 : _3  |-->_3 _1 
_0 |-->_0
_* |-->_*`seq2ruleset125

seq2ruleset113::
_1 : _3  |-->_3 _1 
_0 |-->_0
_* |-->_*`seq2ruleset113

OclAttribute::
attribute _2 : _4  |-->_4 _2 ; 

OclEnumeration::
enumeration _2 { _* }  |-->enum _2 { _*`seq2ruleset193 } ; 

OclBasicExpression::
null  |-->NULL 
this |-->self
_1 . _3 ( )  |-->_1 . _3 ( ) 
_1 [ _3 ]  |-->_1 [ _3 - 1 ] 
_1 . _3 ( _* )  |-->_1 . _3 ( _* ) 
_1 . _3  |-->_1 . _3 
_1  |-->_1 <when> _1 Integer
_1  |-->_1 <when> _1 Real
_1  |-->_1 <when> _1 Boolean
_1  |-->_1 <when> _1 String
_1 |-->_1
_* |-->self

OclStatement::
call skip   |-->; 
var _2 : double   |-->double _2 ; 
var _2 : boolean   |-->_Bool _2 ; 
var _2 : String   |-->char * _2 ; 
var _2 : OclAny   |-->void * _2 ; 
( _2 )  |-->{ _2`subruleset92 } 
return _2  |-->return _2 ; 
call _2  |-->_2 ; 
var _2 : _4  |-->_4 _2 ; <when> _4 Integer
while _2 do _4  |-->while ( _2 ) { _4 } 
_1 := _3  |-->_1 = _3 ; 
_1  |-->_1 ; 
if _2 then _4 else _6  |-->if ( _2 ) { _4 } else { _6 } 
for _2 : _4 do _6  |-->{ int _index = 0 ; for ( ; _index < length ( _4 ) ; _index ++ ) { void * _2 = _4 [ _index ] ; _6 } } 



